---
# tasks file for nsxt_config_profile-transportnode
- name: Get Transportnode-Profile "{{ item.display_name }}"
  uri:
    url: https://{{ inventory_hostname }}/policy/api/v1/infra/host-transport-node-profiles
    method: GET
    status_code: 200, 404
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
  register: transportnode_profile
  delegate_to: '{{ nsxt.api_host }}'

- name: Set Transportnode-Profile
  set_fact:
    transportnode_profile: "{{ (transportnode_profile | json_query(query)).0 }}"
  vars:
    query: "json.results[?display_name=='{{ item.display_name}}'].{id:id, _revision:_revision}"
  when: item.display_name in (transportnode_profile.json | json_query('results[*].display_name'))

- name: Create Transportnode Profile Payload
  template:
    src: template_transportnodeprofile.j2
    dest: /tmp/nsxt_transportnodeprofile.yml
  delegate_to: '{{ nsxt.api_host }}'

- name: Create Transportnode Profile  "{{ item.display_name }}"
  uri:
    url: https://{{ inventory_hostname }}/policy/api/v1/infra/host-transport-node-profiles/{{ item.id }}
    method: PUT
    status_code: 200
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
    body_format: json
    body: "{{ (lookup('template', '/tmp/nsxt_transportnodeprofile.yml')) | from_yaml }}"
  delegate_to: '{{ nsxt.api_host }}'

- name: Remove Transportnode Profile Payload
  file:
    path: /tmp/nsxt_transportnodeprofile.yml
    state: absent
  delegate_to: '{{ nsxt.api_host }}'
