---
# tasks file for nsxt_config_ippool
- name: Get IPPool
  uri:
    url: https://{{ inventory_hostname }}/policy/api/v1/infra/ip-pools
    method: GET
    status_code: 200
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
  register: ippool
  delegate_to: '{{ nsxt.api_host }}'

- name: Set IPPool
  set_fact:
    ippool: "{{ (ippool.json | json_query('results[?display_name==`' + item.ippool + '`].id'))[0] }}"

- name: Get IP Subnet
  uri:
    url: https://{{ inventory_hostname }}/policy/api/v1/infra/ip-pools/{{ ippool }}/ip-subnets
    method: GET
    status_code: 200
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
  register: ipsubnet
  delegate_to: '{{ nsxt.api_host }}'

- name: Remove ippool from payload
  set_fact:
    payload: "{{ item | ansible.utils.remove_keys(target=['ippool']) }}"

# - name: Add default parameters
#   set_fact:
#     payload: "{{ payload }}"

- name: Exist, Update - add _revision parameter
  set_fact:
    #method: 'PATCH'
    #status_code: 200
    payload: "{{ payload | combine({ '_revision': (ipsubnet.json | json_query('results[?id==`' + item.id + '`]._revision'))[0] }) }}"
  when: item.id in (ipsubnet.json | json_query('results[*].id'))

- name: Create or update IP-Subnet "{{ item.display_name }}"
  uri:
    url: https://{{ inventory_hostname }}/policy/api/v1/infra/ip-pools/{{ ippool }}/ip-subnets/{{ item.id }}
    method: "{{ method | default('PATCH') }}"
    status_code: "{{ status_code | default('200') }}"
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
    body_format: json
    body:
      "{{ payload }}"
  delegate_to: '{{ nsxt.api_host }}'
