---
# tasks file for nsxt_config_compute-manager
- name: Get Computer Manager
  uri:
    url: https://{{ inventory_hostname }}/api/v1/fabric/compute-managers
    method: GET
    status_code: 200
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
    return_content: true
  register: nsxt_computer_manager
  delegate_to: '{{ nsxt.api_host }}'

- name: Get Fingerprint
  shell: openssl s_client -connect {{ item.hostname }}:443  2>/dev/null </dev/null |  sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | openssl x509 -fingerprint -noout -in /dev/stdin -sha256 | sed 's/sha256 Fingerprint=//'
  register: thumbprint
  delegate_to: '{{ nsxt.api_host }}'

- name: Set Fingerprint
  set_fact:
    thumbprint: "{{ thumbprint.stdout }}"

- name: create or update
  set_fact:
    method: 'PUT'
    id: "{{ (nsxt_computer_manager.json | json_query('results[?display_name==`' + item.hostname + '`].id')).0 }}"
    _revision: "{{ (nsxt_computer_manager.json | json_query('results[?display_name==`' + item.hostname + '`]._revision')).0 }}"
  when: item.hostname in (nsxt_computer_manager.json | json_query('results[*].display_name'))

- name: Create or update Compute-Manager  "{{ item.hostname }}"
  uri:
    url: https://{{ inventory_hostname }}/api/v1/fabric/compute-managers/{{ id | default('') }}
    method: "{{ method | default('POST') }}"
    status_code: 201
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
    body_format: json
    body:
      display_name: '{{ item.hostname }}'
      server: '{{ item.hostname }}'
      origin_type: 'vCenter'
      multi_nsx: '{{ item.multi_nsx }}'
      credential:
        credential_type: 'UsernamePasswordLoginCredential'
        username: '{{ item.username }}'
        password: '{{ item.password }}'
        thumbprint: '{{ thumbprint }}'
      create_service_account: '{{ item.create_service_account }}'
      set_as_oidc_provider: '{{ item.set_as_oidc_provider }}'
      access_level_for_oidc: '{{ item.access_level_for_oidc }}'
      resource_type: "ComputeManager"
      _revision: "{{ _revision | default(omit) }}"
  delegate_to: '{{ nsxt.api_host }}'

