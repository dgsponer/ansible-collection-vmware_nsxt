---
# tasks file for nsxt_config_compute-manager
- name: Get Computer Manager
  uri:
    url: https://{{ inventory_hostname }}/api/v1/fabric/compute-managers
    method: GET
    status_code: 200
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
  register: computer_manager
  delegate_to: '{{ nsxt.api_host }}'

- name: Get Fingerprint
  shell: openssl s_client -connect {{ item.server }}:443  2>/dev/null </dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | openssl x509 -fingerprint -noout -in /dev/stdin -sha256 | sed 's/sha256 Fingerprint=//'
  register: thumbprint
  delegate_to: '{{ nsxt.api_host }}'

- name: Set Fingerprint
  set_fact:
    thumbprint: "{{ thumbprint.stdout }}"

- name: Add default parameters credential
  set_fact:
    credential: "{{ item.credential | combine({ 'credential_type': 'UsernamePasswordLoginCredential' }) }}"
- name: Add default parameters credential
  set_fact:
    credential: "{{ credential | combine({ 'thumbprint': thumbprint }) }}"

- name: Add default parameters
  set_fact:
    payload: "{{ item | combine({ 'resource_type': 'ComputeManager' }) }}"
- name: Add default parameters
  set_fact:
    payload: "{{ payload | combine({ 'credential': credential }) }}"

- name: Exist, Update - add _revision parameter
  set_fact:
    method: 'PUT'
    status_code: 200
    id: "{{ (computer_manager.json | json_query('results[?server==`' + item.server + '`].id'))[0] }}"
    payload: "{{ payload | combine({ '_revision': (computer_manager.json | json_query('results[?server==`' + item.server + '`]._revision'))[0] }) }}"
  when: item.server in (computer_manager.json | json_query('results[*].server'))

- name: Create or update Compute-Manager  "{{ item.display_name }}"
  uri:
    url: https://{{ inventory_hostname }}/api/v1/fabric/compute-managers/{{ id | default('') }}
    method: "{{ method | default('POST') }}"
    status_code: "{{ status_code | default('201') }}"
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
    body_format: json
    body:
      "{{ payload }}"
  register: computer_manager_result
  delegate_to: '{{ nsxt.api_host }}'

- name: Check Computer Manager "{{ computer_manager_result.json.display_name }}" state is success
  uri:
    url: https://{{ inventory_hostname }}/api/v1/fabric/compute-managers/{{ computer_manager_result.json.id }}/state
    method: GET
    status_code: 200
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
  register: computer_manager_state
  until: ( computer_manager_state.json.state == "success" )
  retries: 100
  delay: 15
  delegate_to: '{{ nsxt.api_host }}'

- name: Check Computer Manager "{{ computer_manager_result.json.display_name }}" status is UP and REGISTERED
  uri:
    url: https://{{ inventory_hostname }}/api/v1/fabric/compute-managers/{{ computer_manager_result.json.id }}/status
    method: GET
    status_code: 200
    validate_certs: no
    user: "{{ nsxt.admin_username }}"
    password: "{{ nsxt.admin_password }}"
    force_basic_auth: yes
  register: computer_manager_status
  until: ( computer_manager_status.json.connection_status == "UP" ) and ( computer_manager_status.json.registration_status == "REGISTERED" )
  retries: 100
  delay: 15
  delegate_to: '{{ nsxt.api_host }}'
